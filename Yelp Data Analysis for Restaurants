Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10000 records
ii. Business table = 10000
iii. Category table = 10000
iv. Checkin table = 10000
vi. friend table = 10000
v. elite_years table = 10000
vii. hours table = 10000
viii. photo table = 10000
ix. review table = 10000
x. tip table = 10000
xi. user table = 10000
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = 10000 records ( Distinct by primary key id)
ii. Hours = 1562 records (Distinct by foreign key  business_id)
iii. Category = 2643 record (Distinct by foreign key business_id)
iv. Attribute =1115 (Distinct by foreign key business_id)
v. Review = 10000 (Distinct by primary key id)
vi. Checkin = 493 (Distinct by foreign key business_id)
vii. Photo = 6493 (Distinct by foreign key business_id)
viii. Tip = 537 (Distinct by foreign key user_id)
ix. User = 10000 (Distinct by primary key id)
x. Friend = 11 (Distinct by foreign key user_id)
xi. Elite_years = 2780 (Distinct by foreign key user_id)

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: No
	
	
	SQL code used to arrive at answer:
	
	Select * from user
    Where id IS NULL;
	

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min:1		max:5		avg: 3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min:1	max:5.0		avg:  3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min:0		max: 2		avg:   0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min: 1	max: 53		avg:   1.9414 
		
	
	v. Table: User, Column: Review_count
	
		min:0		max: 2000		avg: 24.2995
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer: 
	
	SELECT city, review_count
    From business
    Order by(review_count)Desc;
	
	
	Copy and Paste the Result Below:
	
+------------+--------------+
| city       | review_count |
+------------+--------------+
| Las Vegas  |         3873 |
| Montréal   |         1757 |
| Gilbert    |         1549 |
| Las Vegas  |         1410 |
| Las Vegas  |         1389 |
| Las Vegas  |         1252 |
| Las Vegas  |         1116 |
| Las Vegas  |         1084 |
| Las Vegas  |          961 |
| Gilbert    |          902 |
| Las Vegas  |          864 |
| Scottsdale |          823 |
| Las Vegas  |          821 |
| Las Vegas  |          786 |
| Henderson  |          785 |
| Toronto    |          778 |
| Las Vegas  |          768 |
| Las Vegas  |          758 |
| Scottsdale |          726 |
| Cleveland  |          723 |
| Las Vegas  |          720 |
| Charlotte  |          715 |
| Phoenix    |          711 |
| Las Vegas  |          706 |
| Phoenix    |          700 |
+------------+--------------+
(Output limit exceeded, 25 of 10000 total rows shown)
	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon


SQL code used to arrive at answer:

SELECT city, stars
FROM business
Where city = 'Avon';


Copy and Paste the Resulting Table Below (2 columns – star rating and count):
+------+-------+
| city | stars |
+------+-------+
| Avon |   2.5 |
| Avon |   4.0 |
| Avon |   5.0 |
| Avon |   3.5 |
| Avon |   1.5 |
| Avon |   3.5 |
| Avon |   4.5 |
| Avon |   3.5 |
| Avon |   2.5 |
| Avon |   4.0 |
+------+-------+

ii. Beachwood

SQL code used to arrive at answer:


Copy and Paste the Resulting Table Below (2 columns – star rating and count):
		


7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:

SELECT city, stars
FROM business
Where city = 'Beachwood';
		
	Copy and Paste the Result Below:
		
+-----------+-------+
| city      | stars |
+-----------+-------+
| Beachwood |   3.0 |
| Beachwood |   3.0 |
| Beachwood |   4.5 |
| Beachwood |   5.0 |
| Beachwood |   4.0 |
| Beachwood |   4.5 |
| Beachwood |   5.0 |
| Beachwood |   2.0 |
| Beachwood |   3.5 |
| Beachwood |   3.5 |
| Beachwood |   5.0 |
| Beachwood |   2.5 |
| Beachwood |   5.0 |
| Beachwood |   5.0 |
+-----------+-------+

8. Does posing more reviews correlate with more fans?

	Please explain your findings and interpretation of the results:
	
No, as the result states, posing more reviews doesnt correlate with more fans. For example:
Gerald has maximum reviews but only 253 fans as compared to Mimi which has 968 reviews and 497 fans.


+-----------+--------------+---------------+------+
| name      | review_count | average_stars | fans |
+-----------+--------------+---------------+------+
| Gerald    |         2000 |           3.6 |  253 |
| Sara      |         1629 |          3.42 |   50 |
| Yuri      |         1339 |          4.11 |   76 |
| .Hon      |         1246 |          3.14 |  101 |
| William   |         1215 |          4.41 |  126 |
| Harald    |         1153 |           4.4 |  311 |
| eric      |         1116 |          3.31 |   16 |
| Roanna    |         1039 |          3.71 |  104 |
| Mimi      |          968 |          4.05 |  497 |
| Christine |          930 |          3.69 |  173 |
| Ed        |          904 |           3.6 |   38 |
| Nicole    |          864 |           4.0 |   43 |
| Fran      |          862 |           4.1 |  124 |
| Mark      |          861 |          3.36 |  115 |
| Christina |          842 |           4.1 |   85 |
| Dominic   |          836 |          3.47 |   37 |
| Lissa     |          834 |          3.68 |  120 |
| Lisa      |          813 |          4.09 |  159 |
| Alison    |          775 |          3.83 |   61 |
| Sui       |          754 |          3.62 |   78 |
| Tim       |          702 |          3.66 |   35 |
| L         |          696 |          3.27 |   10 |
| Angela    |          694 |          3.89 |  101 |
| Crissy    |          676 |          3.31 |   25 |
| Lyn       |          675 |          4.06 |   45 |
+-----------+--------------+---------------+------+
(Output limit exceeded, 25 of 10000 total rows shown)
	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer:

Based on the search result, "love" word appears in more reviews than word "hate".
	
	SQL code used to arrive at answer:

SELECT count(*)
from review
where (text like '%love%')

+----------+
| count(*) |
+----------+
|     1780 |
+----------+

SELECT count(*)
from review
where (text like '%hate%')

+----------+
| count(*) |
+----------+
|      232 |
+----------+	
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
	
SELECT name, fans
from user
order by (fans) desc
limit 10
	
	Copy and Paste the Result Below:

+-----------+------+
| name      | fans |
+-----------+------+
| Amy       |  503 |
| Mimi      |  497 |
| Harald    |  311 |
| Gerald    |  253 |
| Christine |  173 |
| Lisa      |  159 |
| Cat       |  133 |
| William   |  126 |
| Fran      |  124 |
| Lissa     |  120 |
+-----------+------+	
	
11. Is there a strong relationship (or correlation) between having a high number of fans and being listed as "useful" or "funny?" Out of the top 10 users with the highest number of fans, what percent are also listed as “useful” or “funny”?

Key:
0% - 25% - Low relationship
26% - 75% - Medium relationship
76% - 100% - Strong relationship
	
	SQL code used to arrive at answer:
select name
, id
, fans
, useful
, funny
from user
order by fans desc
limit 10;
	
	Copy and Paste the Result Below:
	
+-----------+------------------------+------+--------+--------+
| name      | id                     | fans | useful |  funny |
+-----------+------------------------+------+--------+--------+
| Amy       | -9I98YbNQnLdAmcYfb324Q |  503 |   3226 |   2554 |
| Mimi      | -8EnCioUmDygAbsYZmTeRQ |  497 |    257 |    138 |
| Harald    | --2vR0DIsmQ6WfcSzKWigw |  311 | 122921 | 122419 |
| Gerald    | -G7Zkl1wIWBBmD0KRy_sCw |  253 |  17524 |   2324 |
| Christine | -0IiMAZI2SsQ7VmyzJjokQ |  173 |   4834 |   6646 |
| Lisa      | -g3XIcCb2b-BD0QBCcq2Sw |  159 |     48 |     13 |
| Cat       | -9bbDysuiWeo2VShFJJtcw |  133 |   1062 |    672 |
| William   | -FZBTkAZEXoP7CYvRV2ZwQ |  126 |   9363 |   9361 |
| Fran      | -9da1xk7zgnnfO1uTVYGkA |  124 |   9851 |   7606 |
| Lissa     | -lh59ko3dxChBSZ9U7LfUw |  120 |    455 |    150 |
+-----------+------------------------+------+--------+--------+	
	Please explain your findings and interpretation of the results:
	
sBased on the table above sorting the users based on their number of fans doesnt show descending or ascending trend in useful or funny columns. Therefore, there is not a strong correlation between having a high number of fans and being listed as "useful" or "funny.
	

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
City: Las Vegas   Category: Food

i. Do the two groups you chose to analyze have a different distribution of hours?
 
 Toronto(city)  category (restaurant)


Yes, both have different hours of operation

ii. Do the two groups you chose to analyze have a different number of reviews?
         
  Yes , both groups have different number of reviews.
  
iii. Are you able to infer anything from the location data provided between these two groups? Explain.

Based on the table results,  Both restaurants are located in downtown area which is closer to each other , however one with higher rating is closer to toronto museum which can be a great factor to attract more visitors.
Business with low star rating is now showing closed.



SQL code used for analysis:

select name,city, stars, category,hours, neighborhood, address,review_count, is_open
from business
inner join category on category.business_id = business.id
inner join hours on hours.business_id = business.id
where city like 'toronto'
group by (stars)
order by (name)


+-----------------------+---------+-------+-----------------------+----------------------+------------------------+-----------------------+--------------+---------+
| name                  | city    | stars | category              | hours                | neighborhood           | address               | review_count | is_open |
+-----------------------+---------+-------+-----------------------+----------------------+------------------------+-----------------------+--------------+---------+
| 99 Cent Sushi         | Toronto |   2.0 | Restaurants           | Saturday|11:00-23:00 | Downtown Core          | 389 Church Street     |            5 |       0 |
| Edulis                | Toronto |   4.0 | Restaurants           | Saturday|18:00-23:00 | Niagara                | 169 Niagara Street    |           89 |       1 |
| Good Gosh Beauty      | Toronto |   4.5 | Beauty & Spas         | Monday|11:30-18:00   | East York              | 325 Glebemount Avenue |            6 |       1 |
| Innercity MMA         | Toronto |   5.0 | Active Life           | Monday|17:00-22:00   | Chinatown              | 403 Dundas Street W   |            3 |       1 |
| The Charlotte Room    | Toronto |   3.5 | Venues & Event Spaces | Saturday|18:00-2:00  | Entertainment District | 19 Charlotte Street   |           10 |       0 |
| The Fox & Fiddle      | Toronto |   2.5 | Bars                  | Saturday|10:00-2:00  | Greektown              | 535 Danforth Ave      |           35 |       1 |
| The Gym at 99 Sudbury | Toronto |   3.0 | Yoga                  | Saturday|8:00-20:00  |                        | 99 Sudbury Street     |           14 |       1 |
+-----------------------+---------+-------+-----------------------+----------------------+------------------------+-----------------------+--------------+---------+
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1:
   Business which is closed is in downtown however the location is not much closer to tourist attractions like one with higher rating restaurant was closer to the museaum.      
         
ii. Difference 2:
         
  Closed business was opened more hours  whereas other restaurant opened during weekend evenings.      
         
SQL code used for analysis:

select name,city, stars, category,hours, neighborhood, address,review_count, is_open
from business
inner join category on category.business_id = business.id
inner join hours on hours.business_id = business.id
where city like 'toronto'
group by (stars)
order by (is_open)
+-----------------------+---------+-------+-----------------------+----------------------+------------------------+-----------------------+--------------+---------+
| name                  | city    | stars | category              | hours                | neighborhood           | address               | review_count | is_open |
+-----------------------+---------+-------+-----------------------+----------------------+------------------------+-----------------------+--------------+---------+
| 99 Cent Sushi         | Toronto |   2.0 | Restaurants           | Saturday|11:00-23:00 | Downtown Core          | 389 Church Street     |            5 |       0 |
| The Charlotte Room    | Toronto |   3.5 | Venues & Event Spaces | Saturday|18:00-2:00  | Entertainment District | 19 Charlotte Street   |           10 |       0 |
| The Fox & Fiddle      | Toronto |   2.5 | Bars                  | Saturday|10:00-2:00  | Greektown              | 535 Danforth Ave      |           35 |       1 |
| The Gym at 99 Sudbury | Toronto |   3.0 | Yoga                  | Saturday|8:00-20:00  |                        | 99 Sudbury Street     |           14 |       1 |
| Edulis                | Toronto |   4.0 | Restaurants           | Saturday|18:00-23:00 | Niagara                | 169 Niagara Street    |           89 |       1 |
| Good Gosh Beauty      | Toronto |   4.5 | Beauty & Spas         | Monday|11:30-18:00   | East York              | 325 Glebemount Avenue |            6 |       1 |
| Innercity MMA         | Toronto |   5.0 | Active Life           | Monday|17:00-22:00   | Chinatown              | 403 Dundas Street W   |            3 |       1 |
+-----------------------+---------+-------+-----------------------+----------------------+------------------------+-----------------------+--------------+---------+
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, 
predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:
         
		 Finding Correlation between different attributes in user table to predict which user likely to have more fans
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:

    We will be needing data from user table which contains number of reviews user had, number of years customer is yelping ( for this we need to use DATE (now) function 
	and subtract the given values from the date format to extract number of years, this helps us to find if number of years yelping makes an impact having more fans.
	
	Also we will be needing average_stars user received and number of fans, how many are useful, funny,and cool and then finding correlation between them. This helps us know which attribute is closely impacting havinh number of fans.
	For this result set we will limit our serach to 20 results.
	
    What has been found that users who have more reviews which are useful, funny and cool likely to have more fans than other users
    Number of years yelping doesnt impact the number of fans user can have.	
	
iii. Output of your finished dataset:
         +-----------+--------------+------+--------+-------+-------+---------------+---------------+
| name      | review_count | fans | useful | funny |  cool | average_stars | years_yelping |
+-----------+--------------+------+--------+-------+-------+---------------+---------------+
| Gerald    |         2000 |  253 |  17524 |  2324 | 15008 |           3.6 |             6 |
| Lissa     |          834 |  120 |    455 |   150 |   342 |          3.68 |            11 |
| bernice   |          255 |  105 |    120 |   112 |   109 |          3.95 |            11 |
| Roanna    |         1039 |  104 |   2995 |  1188 |   636 |          3.71 |            13 |
| .Hon      |         1246 |  101 |   7850 |  5851 |  5104 |          3.14 |            12 |
| Nieves    |          178 |   80 |   1091 |   774 |   940 |          3.64 |             5 |
| Sui       |          754 |   78 |      9 |    18 |     2 |          3.62 |             9 |
| Koizumi   |          160 |   73 |    257 |   315 |   218 |          4.19 |            12 |
| rebecca   |            6 |   69 |      0 |     0 |     0 |          4.33 |            10 |
| Princeton |          376 |   64 |   1594 |   945 |  1114 |          4.15 |            10 |
| Alison    |          775 |   61 |    300 |   302 |   245 |          3.83 |            11 |
| Jayd      |           39 |   60 |     51 |    19 |    36 |          4.23 |            10 |
| Quisha    |          481 |   58 |    689 |   300 |   575 |          3.66 |             9 |
| Renee     |          364 |   54 |   2680 |   687 |   342 |          3.45 |            11 |
| Dottsy    |          196 |   49 |   2654 |   989 |  2989 |          3.42 |            11 |
| Joc       |          652 |   49 |    472 |   654 |   606 |          3.71 |            13 |
| Noushky   |          133 |   48 |    620 |   364 |   328 |          3.57 |             6 |
| Echo      |           42 |   46 |     16 |     1 |     1 |          4.04 |             6 |
| Anton     |          158 |   44 |   2181 |  1972 |  2046 |          3.92 |            10 |
| Susanna   |          639 |   44 |    139 |    83 |    74 |           3.3 |            10 |
+-----------+--------------+------+--------+-------+-------+---------------+---------------+
         
iv. Provide the SQL code you used to create your final dataset:

SELECT name,review_count,fans,useful,funny,cool, average_stars
,(strftime('%Y', 'now') - strftime('%Y', Yelping_since)) - (strftime('%m-%d', 'now') < strftime('%m-%d', Yelping_since))as years_yelping
FROM user
group by (name)
order by (fans)desc
limit 20
